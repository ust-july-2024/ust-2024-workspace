package strings;

public class StringPalindrome {

	public static void main(String[] args) {
		String str1 = "madam";
		String str2 = "malayalam";
		String str3 = "hello";
		
		System.out.println(str1 + " is a Palindrome ? " + isPalindromeNaive(str1));
		System.out.println(str2 + " is a Palindrome ? " + isPalindromeNaive(str2));
		System.out.println(str3 + " is a Palindrome ? " + isPalindromeNaive(str3));
		System.out.println("--------------------------------");
		

	}
	
	// time complexity - O(n)
	// space complexity - 
	public static boolean isPalindromeNaive(String str) {
		boolean output = false;
		String revStr = "";
		//run a for loop on the length of the string starting from the last char
		for(int i=str.length()-1;i>=0;i--) {
			// concatenate and accumulate the characters in another string
			revStr += str.charAt(i);
		}
		// compare if both the strings are equal, if yes set output to true
		if(str.equals(revStr) ) {
			output = true;
		}
		return output;
	}
	
	public static boolean isPalindromeTwoPointerApproach(String str) {
		
		
		return true;
	}

}
